{"version":3,"sources":["components/SortingVisualizer/SortingVisualizer.module.css","Algorithms/BubbleSort.js","Algorithms/MergeSort.js","Algorithms/InsertionSort.js","components/SortingVisualizer/SortingVisualizer.js","App.js","index.js"],"names":["module","exports","bubbleSort","a","arr","animations","i","length","j","push","temp","mergeSortRec","l","r","m","Math","floor","merge","n1","n2","L","R","k","mergeSort","insertionSort","keyi","DELAY","SortingVisualizer","state","isSorting","isSorted","generateArray","resetArrayColor","setState","newArr","randomNumber","arrayBars","document","getElementsByClassName","classes","Bar","style","backgroundColor","min","max","ceil","random","getBubbleSortAnimation","tempArr","animateAlgorithm","getMergeSortAnimation","getInsertionSortAnimation","setTimeout","barOneIndex","barTwoIndex","barOneValue","barTwoValue","swap","barOneStyle","barTwoStyle","h1","h2","swappedArr","animateSortedArray","arrayBarStyle","this","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","disabled","onClick","eventKey","Container","map","num","index","height","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cfdf928f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SortingVisualizer_Container__10yF6\",\"Bar\":\"SortingVisualizer_Bar__3NFvT\",\"Header\":\"SortingVisualizer_Header__FbxeS\",\"Controller\":\"SortingVisualizer_Controller__3_arO\"};","const bubbleSort = (a) => {\r\n  let arr = [...a]\r\n  const animations = []\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    for (let j = 0; j < arr.length - i - 1; j++) {\r\n      animations.push([j, j + 1, arr[j], arr[j + 1], 0])\r\n      if (arr[j] > arr[j + 1]) {\r\n        animations.push([j, j + 1, arr[j], arr[j + 1], 1])\r\n        //animations.push([j, j + 1, arr[j], arr[j + 1], 1])\r\n        let temp = arr[j]\r\n        arr[j] = arr[j + 1]\r\n        arr[j + 1] = temp\r\n      } else {\r\n        animations.push([j, j + 1, arr[j], arr[j + 1], 2])\r\n      }\r\n      animations.push([j, j + 1, arr[j], arr[j + 1], 3])\r\n    }\r\n  }\r\n\r\n  return animations\r\n}\r\n\r\nexport default bubbleSort\r\n","const mergeSort = (a) => {\r\n  let arr = [...a]\r\n  const animations = []\r\n\r\n  mergeSortRec(arr, 0, arr.length - 1, animations)\r\n\r\n  return animations\r\n}\r\n\r\nconst mergeSortRec = (arr, l, r, animations) => {\r\n  if (l >= r) {\r\n    return\r\n  }\r\n  let m = Math.floor((l + r - 1) / 2)\r\n  mergeSortRec(arr, l, m, animations)\r\n  mergeSortRec(arr, m + 1, r, animations)\r\n  merge(arr, l, m, r, animations)\r\n}\r\n\r\nconst merge = (arr, l, m, r, animations) => {\r\n  let n1 = m - l + 1\r\n  let n2 = r - m\r\n\r\n  let L = []\r\n  let R = []\r\n\r\n  for (let i = 0; i < n1; i++) L.push(arr[l + i])\r\n  for (let j = 0; j < n2; j++) R.push(arr[m + 1 + j])\r\n\r\n  let i = 0\r\n  let j = 0\r\n  let k = l\r\n\r\n  while (i < n1 && j < n2) {\r\n    animations.push([l + i, m + 1 + j, L[i], R[j], 0])\r\n    if (L[i] <= R[j]) {\r\n      animations.push([l + i, k, L[i], arr[k], 4])\r\n      animations.push([l + i, m + 1 + j, L[i], R[j], 3])\r\n      arr[k] = L[i]\r\n      i++\r\n    } else {\r\n      animations.push([m + 1 + j, k, R[j], arr[k], 4])\r\n      animations.push([l + i, m + 1 + j, L[i], R[j], 3])\r\n      arr[k] = R[j]\r\n      j++\r\n    }\r\n    k++\r\n  }\r\n\r\n  while (i < n1) {\r\n    animations.push([l + i, m + 1 + j - 1, L[i], R[j - 1], 0])\r\n    animations.push([l + i, k, L[i], arr[k], 4])\r\n    animations.push([l + i, m + 1 + j - 1, L[i], R[j - 1], 3])\r\n    arr[k] = L[i]\r\n    i++\r\n    k++\r\n  }\r\n\r\n  while (j < n2) {\r\n    animations.push([l + i - 1, m + 1 + j, L[i - 1], R[j], 0])\r\n    animations.push([m + 1 + j, k, R[j], arr[k], 4])\r\n    animations.push([l + i - 1, m + 1 + j, L[i - 1], R[j], 3])\r\n    arr[k] = R[j]\r\n    j++\r\n    k++\r\n  }\r\n}\r\n\r\nexport default mergeSort\r\n","const insertionSort = (a) => {\r\n  let arr = [...a]\r\n  const animations = []\r\n\r\n  for (let i = 1; i < arr.length; i++) {\r\n    let keyi = arr[i]\r\n    let j = i - 1\r\n    while (j >= 0 && arr[j] > keyi) {\r\n      animations.push([i, j, keyi, arr[j], 0])\r\n      animations.push([j, j + 1, arr[j], arr[j + 1], 4])\r\n      arr[j + 1] = arr[j]\r\n      animations.push([i, j, keyi, arr[j], 3])\r\n      j = j - 1\r\n    }\r\n    arr[j + 1] = keyi\r\n    animations.push([i, j + 1, keyi, arr[j + 1], 4])\r\n  }\r\n\r\n  return animations\r\n}\r\n\r\nexport default insertionSort\r\n","import React, { Component } from \"react\"\r\nimport { Nav, Navbar } from \"react-bootstrap\"\r\nimport classes from \"./SortingVisualizer.module.css\"\r\nimport bubbleSort from \"../../Algorithms/BubbleSort\"\r\nimport mergeSort from \"../../Algorithms/MergeSort\"\r\nimport insertionSort from \"../../Algorithms/InsertionSort\"\r\n\r\nconst DELAY = 50\r\n\r\nclass SortingVisualizer extends Component {\r\n  state = {\r\n    arr: [],\r\n    isSorting: false,\r\n    isSorted: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateArray()\r\n  }\r\n\r\n  generateArray = () => {\r\n    //console.log(\"in generate array\")\r\n    if (this.state.isSorting) {\r\n      return\r\n    }\r\n    if (this.state.isSorted) {\r\n      //console.log(\"resetArray\")\r\n      this.resetArrayColor()\r\n    }\r\n    this.setState({ isSorted: false })\r\n    let newArr = []\r\n    const min = 5\r\n    const max = 500\r\n    for (let i = 0; i < 50; i++) {\r\n      newArr.push(this.randomNumber(min, max))\r\n    }\r\n    this.setState({ arr: newArr })\r\n  }\r\n\r\n  resetArrayColor = () => {\r\n    //console.log(\"resetArrayColor\")\r\n    const arrayBars = document.getElementsByClassName(classes.Bar)\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      const arrayBarStyle = arrayBars[i].style\r\n      arrayBarStyle.backgroundColor = \"salmon\"\r\n    }\r\n  }\r\n\r\n  randomNumber = (min, max) => {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n  }\r\n\r\n  //Get Bubble Sort Animation\r\n  getBubbleSortAnimation = () => {\r\n    let tempArr = this.state.arr\r\n    const animations = bubbleSort(tempArr)\r\n    this.animateAlgorithm(animations)\r\n  }\r\n\r\n  //Get Merge Sort Animation\r\n  getMergeSortAnimation = () => {\r\n    let tempArr = this.state.arr\r\n    const animations = mergeSort(tempArr)\r\n    //console.log(animations)\r\n    this.animateAlgorithm(animations)\r\n  }\r\n\r\n  //Get Insertion Sort Animation\r\n  getInsertionSortAnimation = () => {\r\n    let tempArr = this.state.arr\r\n    const animations = insertionSort(tempArr)\r\n    this.animateAlgorithm(animations)\r\n  }\r\n\r\n  //Animate Algoritms\r\n  animateAlgorithm = (animations) => {\r\n    if (this.state.isSorting) return\r\n    this.setState({ isSorting: true })\r\n\r\n    const arrayBars = document.getElementsByClassName(classes.Bar)\r\n    for (let i = 0; i < animations.length; i++) {\r\n      setTimeout(() => {\r\n        const [\r\n          barOneIndex,\r\n          barTwoIndex,\r\n          barOneValue,\r\n          barTwoValue,\r\n          swap,\r\n        ] = animations[i]\r\n        const barOneStyle = arrayBars[barOneIndex].style\r\n        const barTwoStyle = arrayBars[barTwoIndex].style\r\n        if (swap === 0) {\r\n          barOneStyle.backgroundColor = \"green\"\r\n          barTwoStyle.backgroundColor = \"green\"\r\n        } else if (swap === 1) {\r\n          const h1 = barOneValue\r\n          const h2 = barTwoValue\r\n          /*barOneStyle.height = `${h2}px`\r\n          barTwoStyle.height = `${h1}px`*/\r\n          let swappedArr = [...this.state.arr]\r\n          swappedArr[barOneIndex] = h2\r\n          swappedArr[barTwoIndex] = h1\r\n          this.setState({ arr: swappedArr })\r\n        } else if (swap === 4) {\r\n          const h1 = barOneValue\r\n          //const h2 = barTwoValue\r\n          let swappedArr = [...this.state.arr]\r\n          //swappedArr[barOneIndex] = h2\r\n          swappedArr[barTwoIndex] = h1\r\n          this.setState({ arr: swappedArr })\r\n        } else if (swap === 2) {\r\n          barOneStyle.backgroundColor = \"red\"\r\n          barTwoStyle.backgroundColor = \"red\"\r\n        } else if (swap === 3) {\r\n          barOneStyle.backgroundColor = \"salmon\"\r\n          barTwoStyle.backgroundColor = \"salmon\"\r\n        }\r\n      }, i * DELAY)\r\n    }\r\n    setTimeout(() => {\r\n      this.animateSortedArray()\r\n    }, animations.length * DELAY)\r\n  }\r\n\r\n  //Animate Sorted Array\r\n  animateSortedArray = () => {\r\n    const arrayBars = document.getElementsByClassName(classes.Bar)\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      const arrayBarStyle = arrayBars[i].style\r\n      setTimeout(() => {\r\n        arrayBarStyle.backgroundColor = \"#16a596\"\r\n      }, i * DELAY)\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ isSorted: true })\r\n      this.setState({ isSorting: false })\r\n    }, arrayBars.length * DELAY)\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"Render Called\")\r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand href=\"#\">Sorting Visualizer</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"#\"\r\n                disabled={this.state.isSorting}\r\n                onClick={this.generateArray}\r\n                eventKey={this.state.isSorting ? \"disabled\" : \"\"}\r\n              >\r\n                Reset\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#\"\r\n                disabled={this.state.isSorting}\r\n                onClick={this.getBubbleSortAnimation}\r\n                eventKey={this.state.isSorting ? \"disabled\" : \"\"}\r\n              >\r\n                Bubble Sort\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#\"\r\n                disabled={this.state.isSorting}\r\n                onClick={this.getInsertionSortAnimation}\r\n                eventKey={this.state.isSorting ? \"disabled\" : \"\"}\r\n              >\r\n                Insertion Sort\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#\"\r\n                disabled={this.state.isSorting}\r\n                onClick={this.getMergeSortAnimation}\r\n                eventKey={this.state.isSorting ? \"disabled\" : \"\"}\r\n              >\r\n                Merge Sort\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <div className={classes.Container}>\r\n          {this.state.arr.map((num, index) => {\r\n            return (\r\n              <div\r\n                className={classes.Bar}\r\n                style={{ height: `${num}px`, backgroundColor: \"salmon\" }}\r\n                key={index}\r\n              ></div>\r\n            )\r\n          })}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer\r\n","import SortingVisualizer from \"./components/SortingVisualizer/SortingVisualizer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}